<Window x:Class="SNE.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:views="clr-namespace:SNE.Views"
        xmlns:Converters="clr-namespace:SNE.Models.Converters" 
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:rp="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.WPF"
        prism:ViewModelLocator.AutoWireViewModel="True"
        Title="{Binding Title.Value}" Height="450" Width="800" MinHeight="450" MinWidth="800" >
    <Window.Resources>
        <Converters:ConvertSecondToXcoordinate x:Key="ConvertSecondToXcoordinate"/>
        <Converters:ConvertBPMToSecond x:Key="ConvertBPMToSecond"/>
        <Converters:EventConverter x:Key="EventConverter"/>
        <Converters:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
        <DrawingBrush x:Key="gridBrush"
                      Viewport="0,0,10,10"
                      ViewportUnits="Absolute"
                      TileMode="Tile">
            <DrawingBrush.Drawing>
                <GeometryDrawing>
                    <GeometryDrawing.Geometry>
                        <PathGeometry>
                            <PathFigure StartPoint="0,0">
                                <LineSegment Point="0,10"/>
                                <LineSegment Point="10,10"/>
                            </PathFigure>
                            <PathGeometry.Transform>
                                <ScaleTransform ScaleX="{Binding BPM.Value, Converter={StaticResource ConvertBPMToSecond}}" ScaleY="{Binding GridHeight.Value}"/>
                            </PathGeometry.Transform>
                        </PathGeometry>
                    </GeometryDrawing.Geometry>
                    <GeometryDrawing.Pen>
                        <Pen Brush="DarkGray" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingBrush.Drawing>
        </DrawingBrush>
    </Window.Resources>
    <DockPanel>
        <ContentControl prism:RegionManager.RegionName="ContentRegion" />
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="File(_F)">
                <MenuItem Header="New(_N)" Command="{Binding MenuItemFileNew_Clicked}"/>
                <MenuItem Header="Open project(_O)..." IsEnabled="True" Command="{Binding MenuItemFileOpen_Clicked}"/>
                <MenuItem Header="Save project(_S)..." IsEnabled="{Binding IsInitialized.Value}" Command="{Binding MenuItemFileSave_Clicked}"/>
                <Separator/>
                <MenuItem Header="Export JSON file..." Command="{Binding MenuItemFileExportJSONFile_Clicked}" IsEnabled="{Binding IsInitialized.Value}"/>
                <Separator/>
                <MenuItem Header="Exit(_X)" Command="{Binding MenuItemFileExit_Clicked}"/>
            </MenuItem>
            <MenuItem Header="Help(_H)">
                <MenuItem Header="About(_A)..." Command="{Binding MenuItemHelpAbout_Clicked}"/>
            </MenuItem>
        </Menu>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="60"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="10"/>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="BPM" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <TextBox Grid.Column="1" Text="{Binding BPM.Value}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="50" FlowDirection="RightToLeft"/>
                    <TextBlock Grid.Column="2" Text="Lane" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <TextBox Grid.Column="3" Text="{Binding Lane.Value}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="50" FlowDirection="RightToLeft" IsEnabled="{Binding IsEditable.Value}"/>
                    <StackPanel Grid.Column="4" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                        <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"/>
                    </StackPanel>
                    <TextBlock Grid.Column="5" Text="DifficultyMode" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <RadioButton Grid.Column="6" Content="Easy" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding ShowEasyNotes.Value}"/>
                    <RadioButton Grid.Column="7" Content="Normal" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding ShowNormalNotes.Value}"/>
                    <RadioButton Grid.Column="8" Content="Hard" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding ShowHardNotes.Value}"/>
                </Grid>
            </Grid>
            <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Visible">
                <Grid Background="#FF303030">
                    <Canvas Background="{StaticResource gridBrush}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseRightButtonDown">
                                <rp:EventToReactiveCommand Command="{Binding Editor_MouseRightButtonDown}">
                                    <Converters:EventConverter/>
                                </rp:EventToReactiveCommand>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                <rp:EventToReactiveCommand Command="{Binding Editor_MouseLeftButtonDown}">
                                    <Converters:EventConverter/>
                                </rp:EventToReactiveCommand>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseMove">
                                <rp:EventToReactiveCommand Command="{Binding Editor_MouseMoved}">
                                    <Converters:EventConverter/>
                                </rp:EventToReactiveCommand>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeave">
                                <rp:EventToReactiveCommand Command="{Binding Editor_MouseLeaved}">
                                    <Converters:EventConverter/>
                                </rp:EventToReactiveCommand>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Canvas.RenderTransform>
                            <ScaleTransform ScaleX="{Binding BPM.Value, Converter={StaticResource ConvertBPMToSecond}}" ScaleY="{Binding GridHeight.Value}"/>
                        </Canvas.RenderTransform>
                        <ItemsControl ItemsSource="{Binding LaneTexts}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas IsItemsHost="True" Background="Transparent"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Label Content="{Binding Text}" Foreground="White" FontSize="3"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="{x:Type ContentPresenter}">
                                    <Setter Property="Canvas.Top" Value="{Binding YPosition}" />
                                    <Setter Property="Canvas.Left" Value="{Binding XPosition}" />
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                        </ItemsControl>
                        <ItemsControl ItemsSource="{Binding BPMTexts}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas IsItemsHost="True" Background="Transparent"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Label Content="{Binding Text}" Foreground="White" FontSize="3"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="{x:Type ContentPresenter}">
                                    <Setter Property="Canvas.Top" Value="{Binding YPosition}" />
                                    <Setter Property="Canvas.Left" Value="{Binding XPosition}" />
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                        </ItemsControl>
                        <ItemsControl ItemsSource="{Binding FilteredNotes}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Rectangle Width="2" Height="2" Fill="{Binding NoteColor, Converter={StaticResource ColorToBrushConverter}}"></Rectangle>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="{x:Type ContentPresenter}">
                                    <Setter Property="Canvas.Top" Value="{Binding YPosition}"/>
                                    <Setter Property="Canvas.Left" Value="{Binding XPosition}"/>
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                        </ItemsControl>
                    </Canvas>
                    <Line X1="{Binding CurrentTimeSeconds.Value, Converter={StaticResource ConvertSecondToXcoordinate}}" X2="{Binding CurrentTimeSeconds.Value, Converter={StaticResource ConvertSecondToXcoordinate}}" Y1="0" Y2="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:MainWindow}}}" Stroke="Red"/>
                    <Line X1="{Binding TotalTimeSeconds.Value, Converter={StaticResource ConvertSecondToXcoordinate}}" X2="{Binding TotalTimeSeconds.Value, Converter={StaticResource ConvertSecondToXcoordinate}}" Y1="0" Y2="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:MainWindow}}}" Stroke="Green"/>
                </Grid>
            </ScrollViewer>
            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="200"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Title" Grid.Column="0"/>
                        <TextBox Grid.Column="1" Height="20" Text="{Binding TitleString.Value}"/>
                    </Grid>
                </Grid>
                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="1" Content="Back" Command="{Binding AudioPlayerBackButton_Clicked}"/>
                        <Button Grid.Column="2" Content="Play/Pause" Command="{Binding AudioPlayerPlayPauseButton_Clicked}"/>
                        <Button Grid.Column="3" Content="Forward" Command="{Binding AudioPlayerForwardButton_Clicked}"/>
                    </Grid>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="80"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" HorizontalAlignment="Stretch" Text="{Binding CurrentTimeSeconds.Value, Mode=TwoWay}" VerticalAlignment="Center" Width="60" FlowDirection="RightToLeft"/>
                        <Slider Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Stretch" Value="{Binding CurrentTimeSeconds.Value, Mode=TwoWay}" Maximum="{Binding TotalTimeSeconds.Value}" TickFrequency="0.01"/>
                        <Label Grid.Column="2" Content="{Binding TotalTimeSeconds.Value}" HorizontalAlignment="Right"/>
                    </Grid>
                </Grid>
                <Grid Grid.Column="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0" Content="Volume" VerticalAlignment="Center"/>
                    <Slider Grid.Column="1" Width="100" VerticalAlignment="Center" Maximum="1" LargeChange="0.1" TickFrequency="0.1" Value="{Binding Volume.Value, Mode=TwoWay}"/>
                </Grid>
            </Grid>
        </Grid>
    </DockPanel>
</Window>
